CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)

# DEBUG|RELEASE|RELWITHDEBINFO|MINSIZEREL
# SET (CMAKE_BUILD_TYPE DEBUG)
SET (CMAKE_BUILD_TYPE DEBUG)

# Application name
SET (APP_NAME final)

# Project name
PROJECT (${APP_NAME})

# Compiler flags
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")

# Directories
SET (SRC_DIR ${PROJECT_SOURCE_DIR}/src)
SET (INC_DIR ${PROJECT_SOURCE_DIR}/include)
SET (LIB_DIR ${PROJECT_SOURCE_DIR}/lib)
SET (TST_DIR ${PROJECT_SOURCE_DIR}/test)

#ENABLE_TESTING ()

ADD_EXECUTABLE (${APP_NAME} "${PROJECT_SOURCE_DIR}/main.cpp")

###### BOOST ###########
#FIND_PACKAGE(Boost REQUIRED)
# SET (Boost_USE_STATIC_LIBS ON)
# SET (Boost_USE_MULTITHREADED ON)

###### LIBEV ###########
FIND_PATH(LIBEV_INCLUDE_DIR ev.h HINTS /usr/include/libev )
FIND_LIBRARY(LIBEV_LIBRARIES NAMES ev)
IF(LIBEV_INCLUDE_DIR AND LIBEV_LIBRARIES)
    SET(LIBEV_FOUND TRUE)
ENDIF(LIBEV_INCLUDE_DIR AND LIBEV_LIBRARIES)
IF(LIBEV_FOUND)
    IF (NOT Libev_FIND_QUIETLY)
        MESSAGE(STATUS "Found libev includes:   ${LIBEV_INCLUDE_DIR}/libev/ev.h")
        MESSAGE(STATUS "Found libev library: ${LIBEV_LIBRARIES}")
    ENDIF (NOT Libev_FIND_QUIETLY)
ELSE(LIBEV_FOUND)
    IF (Libev_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "Could NOT find libev development files")
    ENDIF (Libev_FIND_REQUIRED)
ENDIF(LIBEV_FOUND)
###### /LIBEV ##########

INCLUDE_DIRECTORIES (${INC_DIR} ${LIBEV_INCLUDE_DIR})

ADD_SUBDIRECTORY( ${SRC_DIR} )

TARGET_LINK_LIBRARIES(final tserver ${LIBEV_LIBRARIES})

